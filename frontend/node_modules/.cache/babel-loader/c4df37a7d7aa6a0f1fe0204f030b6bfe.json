{"ast":null,"code":"import _slicedToArray from \"/Users/edwardlee/code/react/project-management-tool/project-management-tool/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/edwardlee/code/react/project-management-tool/project-management-tool/frontend/src/components/Project/Project.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Project.scss\";\nimport axios from \"axios\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport Stage from \"../Stage/Stage\";\nimport ProjectForm from \"../Projectform//Projectform\";\nexport default function Project() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        stageOne = _useState2[0],\n        setStageOne = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        stageTwo = _useState4[0],\n        setStageTwo = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        stageThree = _useState6[0],\n        setStageThree = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        stageFour = _useState8[0],\n        setStageFour = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        stageFive = _useState10[0],\n        setStageFive = _useState10[1];\n\n  const _useState11 = useState(true),\n        _useState12 = _slicedToArray(_useState11, 2),\n        loading = _useState12[0],\n        setLoading = _useState12[1];\n\n  const _useState13 = useState(true),\n        _useState14 = _slicedToArray(_useState13, 2),\n        show = _useState14[0],\n        setShow = _useState14[1];\n\n  useEffect(() => {\n    fetchData();\n    loader();\n  }, []); /// loader is optional\n\n  const loader = () => setTimeout(() => {\n    setLoading(false);\n  }, 300); //fetch Data from backend\n\n\n  const fetchData = () => {\n    axios({\n      url: \"http://localhost:3000/api/projects\"\n    }).then(res => {\n      filterProjects(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }; //delete a single item\n\n\n  const deleteHandler = e => {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:3000/api/delete/\".concat(e)\n    }).then(res => {\n      console.log(res);\n      fetchData();\n    }).catch(err => {\n      console.log(err);\n    });\n  }; //filter data retrieved from backend based on their stage\n\n\n  const filterProjects = data => {\n    const one = data.filter(element => element.stage === \"1\");\n    const two = data.filter(element => element.stage === \"2\");\n    const three = data.filter(element => element.stage === \"3\");\n    const four = data.filter(element => element.stage === \"4\");\n    const five = data.filter(element => element.stage === \"5\");\n    setStageOne(one);\n    setStageTwo(two);\n    setStageThree(three);\n    setStageFour(four);\n    setStageFive(five);\n  };\n\n  const onDragEndHandle = result => {\n    const destination = result.destination,\n          source = result.source,\n          draggableId = result.draggableId; //Do nothing when no destination\n\n    if (!destination) {\n      return;\n    }\n\n    if ( // Check if destination is the same place and do nothing\n    destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    } else if ( // check same destination differnt order\n    destination.droppableId === source.droppableId && source.index !== destination.index) {\n      switch (source.droppableId) {\n        // moving tiles up and down, Needs to be worked on and find a better solution.\n        case \"stageOne\":\n          let newStageOne = [...stageOne];\n          let stealOne = newStageOne.splice(source.index, 1)[0];\n          newStageOne.splice(destination.index, 0, stealOne);\n          setStageOne(newStageOne);\n          break;\n\n        case \"stageTwo\":\n          let newStageTwo = [...stageTwo];\n          let stealTwo = newStageTwo.splice(source.index, 1)[0];\n          newStageTwo.splice(destination.index, 0, stealTwo);\n          setStageTwo(newStageTwo);\n          break;\n\n        case \"stageThree\":\n          let newStageThree = [...stageThree];\n          let stealThree = newStageThree.splice(source.index, 1)[0];\n          newStageThree.splice(destination.index, 0, stealThree);\n          setStageThree(newStageThree);\n          break;\n\n        case \"stageFour\":\n          let newStageFour = [...stageFour];\n          let stealFour = newStageFour.splice(source.index, 1)[0];\n          newStageFour.splice(destination.index, 0, stealFour);\n          setStageFour(newStageFour);\n          break;\n\n        case \"stageFive\":\n          let newStageFive = [...stageFive];\n          let stealFive = newStageFive.splice(source.index, 1)[0];\n          newStageFive.splice(destination.index, 0, stealFive);\n          setStageFive(newStageFive);\n          break;\n      }\n    } else if (destination.droppableId !== source.droppableId) {\n      //added loader to prevent ugly render glitch\n      setLoading(true); // update MongoDb after tile moved to another stage\n\n      let endPoint = \"\";\n\n      switch (destination.droppableId) {\n        case \"stageOne\":\n          endPoint = \"1\";\n          break;\n\n        case \"stageTwo\":\n          endPoint = \"2\";\n          break;\n\n        case \"stageThree\":\n          endPoint = \"3\";\n          break;\n\n        case \"stageFour\":\n          endPoint = \"4\";\n          break;\n\n        case \"stageFive\":\n          endPoint = \"5\";\n          break;\n      }\n\n      axios({\n        method: \"POST\",\n        url: \"http://localhost:3000/api/project/\".concat(draggableId, \"/\").concat(endPoint)\n      }); // re-fetch data after stage change\n\n      fetchData();\n    }\n\n    loader();\n  };\n\n  return React.createElement(React.Fragment, null, loading ? React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"LOADING\") : React.createElement(DragDropContext, {\n    onDragEnd: onDragEndHandle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"stage-main-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"stage-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(Stage, {\n    stage: stageOne,\n    deleteHandler: deleteHandler,\n    droppableId: \"stageOne\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }), React.createElement(Stage, {\n    stage: stageTwo,\n    deleteHandler: deleteHandler,\n    droppableId: \"stageTwo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }), React.createElement(Stage, {\n    stage: stageThree,\n    deleteHandler: deleteHandler,\n    droppableId: \"stageThree\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }), React.createElement(Stage, {\n    stage: stageFour,\n    deleteHandler: deleteHandler,\n    droppableId: \"stageFour\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }), React.createElement(Stage, {\n    stage: stageFive,\n    deleteHandler: deleteHandler,\n    droppableId: \"stageFive\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  })), show ? React.createElement(ProjectForm, {\n    fetchData: fetchData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }) : React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"asd\"))));\n}","map":{"version":3,"sources":["/Users/edwardlee/code/react/project-management-tool/project-management-tool/frontend/src/components/Project/Project.js"],"names":["React","useEffect","useState","axios","DragDropContext","Stage","ProjectForm","Project","stageOne","setStageOne","stageTwo","setStageTwo","stageThree","setStageThree","stageFour","setStageFour","stageFive","setStageFive","loading","setLoading","show","setShow","fetchData","loader","setTimeout","url","then","res","filterProjects","data","catch","err","console","log","deleteHandler","e","method","one","filter","element","stage","two","three","four","five","onDragEndHandle","result","destination","source","draggableId","droppableId","index","newStageOne","stealOne","splice","newStageTwo","stealTwo","newStageThree","stealThree","newStageFour","stealFour","newStageFive","stealFive","endPoint"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Project.scss\";\nimport axios from \"axios\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport Stage from \"../Stage/Stage\";\nimport ProjectForm from \"../Projectform//Projectform\";\nexport default function Project() {\n  const [stageOne, setStageOne] = useState([]);\n  const [stageTwo, setStageTwo] = useState([]);\n  const [stageThree, setStageThree] = useState([]);\n  const [stageFour, setStageFour] = useState([]);\n  const [stageFive, setStageFive] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [show, setShow] = useState(true);\n\n  useEffect(() => {\n    fetchData();\n    loader();\n  }, []);\n\n  /// loader is optional\n  const loader = () =>\n    setTimeout(() => {\n      setLoading(false);\n    }, 300);\n\n  //fetch Data from backend\n  const fetchData = () => {\n    axios({\n      url: \"http://localhost:3000/api/projects\"\n    })\n      .then(res => {\n        filterProjects(res.data);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  //delete a single item\n  const deleteHandler = e => {\n    axios({\n      method: \"POST\",\n      url: `http://localhost:3000/api/delete/${e}`\n    })\n      .then(res => {\n        console.log(res);\n        fetchData();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  //filter data retrieved from backend based on their stage\n  const filterProjects = data => {\n    const one = data.filter(element => element.stage === \"1\");\n    const two = data.filter(element => element.stage === \"2\");\n    const three = data.filter(element => element.stage === \"3\");\n    const four = data.filter(element => element.stage === \"4\");\n    const five = data.filter(element => element.stage === \"5\");\n    setStageOne(one);\n    setStageTwo(two);\n    setStageThree(three);\n    setStageFour(four);\n    setStageFive(five);\n  };\n\n  const onDragEndHandle = result => {\n    const { destination, source, draggableId } = result;\n    //Do nothing when no destination\n    if (!destination) {\n      return;\n    }\n\n    if (\n      // Check if destination is the same place and do nothing\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    } else if (\n      // check same destination differnt order\n      destination.droppableId === source.droppableId &&\n      source.index !== destination.index\n    ) {\n      switch (source.droppableId) {\n        // moving tiles up and down, Needs to be worked on and find a better solution.\n        case \"stageOne\":\n          let newStageOne = [...stageOne];\n          let stealOne = newStageOne.splice(source.index, 1)[0];\n          newStageOne.splice(destination.index, 0, stealOne);\n          setStageOne(newStageOne);\n          break;\n        case \"stageTwo\":\n          let newStageTwo = [...stageTwo];\n          let stealTwo = newStageTwo.splice(source.index, 1)[0];\n          newStageTwo.splice(destination.index, 0, stealTwo);\n          setStageTwo(newStageTwo);\n          break;\n        case \"stageThree\":\n          let newStageThree = [...stageThree];\n          let stealThree = newStageThree.splice(source.index, 1)[0];\n          newStageThree.splice(destination.index, 0, stealThree);\n          setStageThree(newStageThree);\n          break;\n        case \"stageFour\":\n          let newStageFour = [...stageFour];\n          let stealFour = newStageFour.splice(source.index, 1)[0];\n          newStageFour.splice(destination.index, 0, stealFour);\n          setStageFour(newStageFour);\n          break;\n        case \"stageFive\":\n          let newStageFive = [...stageFive];\n          let stealFive = newStageFive.splice(source.index, 1)[0];\n          newStageFive.splice(destination.index, 0, stealFive);\n          setStageFive(newStageFive);\n          break;\n      }\n    } else if (destination.droppableId !== source.droppableId) {\n      //added loader to prevent ugly render glitch\n      setLoading(true);\n      // update MongoDb after tile moved to another stage\n      let endPoint = \"\";\n      switch (destination.droppableId) {\n        case \"stageOne\":\n          endPoint = \"1\";\n          break;\n        case \"stageTwo\":\n          endPoint = \"2\";\n          break;\n        case \"stageThree\":\n          endPoint = \"3\";\n          break;\n        case \"stageFour\":\n          endPoint = \"4\";\n          break;\n        case \"stageFive\":\n          endPoint = \"5\";\n          break;\n      }\n      axios({\n        method: \"POST\",\n        url: `http://localhost:3000/api/project/${draggableId}/${endPoint}`\n      });\n\n      // re-fetch data after stage change\n      fetchData();\n    }\n    loader();\n  };\n\n  return (\n    <>\n      {loading ? (\n        <h1>LOADING</h1>\n      ) : (\n        <DragDropContext onDragEnd={onDragEndHandle}>\n          <div className=\"stage-main-container\">\n            <div className=\"stage-wrap\">\n              <Stage\n                stage={stageOne}\n                deleteHandler={deleteHandler}\n                droppableId={\"stageOne\"}\n              />\n              <Stage\n                stage={stageTwo}\n                deleteHandler={deleteHandler}\n                droppableId={\"stageTwo\"}\n              />\n              <Stage\n                stage={stageThree}\n                deleteHandler={deleteHandler}\n                droppableId={\"stageThree\"}\n              />\n              <Stage\n                stage={stageFour}\n                deleteHandler={deleteHandler}\n                droppableId={\"stageFour\"}\n              />\n              <Stage\n                stage={stageFive}\n                deleteHandler={deleteHandler}\n                droppableId={\"stageFive\"}\n              />\n            </div>\n\n            {show ? <ProjectForm fetchData={fetchData} /> : <h1>asd</h1>}\n          </div>\n        </DragDropContext>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}