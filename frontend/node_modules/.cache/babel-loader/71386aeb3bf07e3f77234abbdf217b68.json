{"ast":null,"code":"import _slicedToArray from \"/Users/edwardlee/code/react/project-management-tool/project-management-tool/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/edwardlee/code/react/project-management-tool/project-management-tool/frontend/src/components/Project/Project.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Project.scss\";\nimport axios from \"axios\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport ProjectCard from \"../ProjectCard/ProjectCard\";\nexport default function Project() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        stageOne = _useState4[0],\n        setStageOne = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        stageTwo = _useState6[0],\n        setStageTwo = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        stageThree = _useState8[0],\n        setStageThree = _useState8[1];\n\n  useEffect(() => {\n    axios({\n      url: \"http://localhost:3000/api/projects\"\n    }).then(res => {\n      filterProjects(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  const filterProjects = data => {\n    const one = data.filter(element => element.stage === \"1\");\n    const two = data.filter(element => element.stage === \"2\");\n    const three = data.filter(element => element.stage === \"3\");\n    setStageOne(one);\n    setStageTwo(two);\n    setStageThree(three);\n  };\n\n  const onDragEndHandle = result => {\n    console.log(result);\n    const destination = result.destination,\n          source = result.source,\n          draggableId = result.draggableId;\n\n    if (!destination) {\n      return;\n    }\n\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    } else if (destination.droppableId === source.droppableId && source.index === !destination.index) {\n      return;\n    }\n  };\n\n  return React.createElement(DragDropContext, {\n    onDragEnd: onDragEndHandle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"stage-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Droppable, {\n    droppableId: \"stageOne\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, provided => React.createElement(\"div\", Object.assign({\n    className: \"stageOne-container\"\n  }, provided.droppableProps, {\n    ref: provided.innerRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), stageOne.map((project, index) => React.createElement(ProjectCard, Object.assign({\n    key: project._id\n  }, project, {\n    index: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }))), provided.placeholder))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Droppable, {\n    droppableId: \"stageTwo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, provided => React.createElement(\"div\", Object.assign({\n    className: \"stageTwo-container\"\n  }, provided.droppableProps, {\n    ref: provided.innerRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), stageTwo.map((project, index) => React.createElement(ProjectCard, Object.assign({\n    key: project._id\n  }, project, {\n    index: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }))), provided.placeholder))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Droppable, {\n    droppableId: \"stageThree\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, provided => React.createElement(\"div\", Object.assign({\n    className: \"stageThree-container\"\n  }, provided.droppableProps, {\n    ref: provided.innerRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), stageThree.map((project, index) => React.createElement(ProjectCard, Object.assign({\n    key: project._id\n  }, project, {\n    index: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }))), provided.placeholder)))));\n} // import React, { useEffect, useState } from \"react\";\n// import \"./Project.scss\";\n// import initData from \"./testData\";\n// import Column from \"../Column/Column\";\n// import { DragDropContext } from \"react-beautiful-dnd\";\n// export default function Project() {\n//   const [data, setData] = useState(initData);\n//   const onDragEnd = result => {\n//     const { destination, source, draggableId } = result;\n//     if (!destination) {\n//       return;\n//     }\n//     if (\n//       destination.droppableId === source.droppableId &&\n//       destination.index === source.index\n//     ) {\n//       return;\n//     }\n//     const column = data.columns[source.droppableId];\n//     const newTaskIds = Array.from(column.taskIds);\n//     newTaskIds .splice(source.index, 1);\n//     newTaskIds.splice(destination.index, 0 , draggableId);\n//     const newColumn = {\n//       ...column,\n//       taskIds:newTaskIds,\n//     }\n//     const newState ={\n//        ...data,\n//        column:{\n//          ...data.columns,\n//          [newColumn.id]:newColumn,\n//        }\n//     }\n//     setData(newState)\n//   };\n//   return (\n//     <DragDropContext onDragEnd={onDragEnd}>\n//       <div className=\"project-main-container\">\n//         {data.columnOrder.map(columnId => {\n//           const column = data.columns[columnId];\n//           const tasks = column.taskIds.map(taskId => data.tasks[taskId]);\n//           return <Column key={column.id} column={column} tasks={tasks} />;\n//         })}\n//       </div>\n//     </DragDropContext>\n//   );\n// }","map":{"version":3,"sources":["/Users/edwardlee/code/react/project-management-tool/project-management-tool/frontend/src/components/Project/Project.js"],"names":["React","useEffect","useState","axios","DragDropContext","Droppable","ProjectCard","Project","data","setData","stageOne","setStageOne","stageTwo","setStageTwo","stageThree","setStageThree","url","then","res","filterProjects","catch","err","console","log","one","filter","element","stage","two","three","onDragEndHandle","result","destination","source","draggableId","droppableId","index","provided","droppableProps","innerRef","map","project","_id","placeholder"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Project.scss\";\nimport axios from \"axios\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport ProjectCard from \"../ProjectCard/ProjectCard\";\n\nexport default function Project() {\n  const [data, setData] = useState([]);\n  const [stageOne, setStageOne] = useState([]);\n  const [stageTwo, setStageTwo] = useState([]);\n  const [stageThree, setStageThree] = useState([]);\n\n  useEffect(() => {\n    axios({\n      url: \"http://localhost:3000/api/projects\"\n    })\n      .then(res => {\n        filterProjects(res.data);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }, []);\n\n  const filterProjects = data => {\n    const one = data.filter(element => element.stage === \"1\");\n    const two = data.filter(element => element.stage === \"2\");\n    const three = data.filter(element => element.stage === \"3\");\n    setStageOne(one);\n    setStageTwo(two);\n    setStageThree(three);\n  };\n\n  const onDragEndHandle = result => {\n    console.log(result)\n    const { destination, source, draggableId } = result;\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }else if(\n      destination.droppableId === source.droppableId && \n      source.index === ! destination.index\n    ){\n      return;\n\n    }\n\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEndHandle}>\n      <div className=\"stage-container\">\n        <div>\n          <Droppable droppableId=\"stageOne\">\n            {provided => (\n              <div\n                className=\"stageOne-container\"\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                {stageOne.map((project, index) => (\n                  <ProjectCard key={project._id} {...project} index={index} />\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </div>\n        <div>\n          <Droppable droppableId=\"stageTwo\">\n            {provided => (\n              <div\n                className=\"stageTwo-container\"\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                {stageTwo.map((project, index) => (\n                  <ProjectCard key={project._id} {...project} index={index} />\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </div>\n        <div>\n          <Droppable droppableId=\"stageThree\">\n            {provided => (\n              <div\n                className=\"stageThree-container\"\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                {stageThree.map((project, index) => (\n                  <ProjectCard key={project._id} {...project} index={index} />\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </div>\n      </div>\n    </DragDropContext>\n  );\n}\n\n// import React, { useEffect, useState } from \"react\";\n// import \"./Project.scss\";\n// import initData from \"./testData\";\n// import Column from \"../Column/Column\";\n// import { DragDropContext } from \"react-beautiful-dnd\";\n\n// export default function Project() {\n//   const [data, setData] = useState(initData);\n\n//   const onDragEnd = result => {\n//     const { destination, source, draggableId } = result;\n//     if (!destination) {\n//       return;\n//     }\n\n//     if (\n//       destination.droppableId === source.droppableId &&\n//       destination.index === source.index\n//     ) {\n//       return;\n//     }\n\n//     const column = data.columns[source.droppableId];\n//     const newTaskIds = Array.from(column.taskIds);\n//     newTaskIds .splice(source.index, 1);\n//     newTaskIds.splice(destination.index, 0 , draggableId);\n\n//     const newColumn = {\n//       ...column,\n//       taskIds:newTaskIds,\n\n//     }\n\n//     const newState ={\n//        ...data,\n//        column:{\n//          ...data.columns,\n//          [newColumn.id]:newColumn,\n//        }\n//     }\n\n//     setData(newState)\n\n//   };\n//   return (\n//     <DragDropContext onDragEnd={onDragEnd}>\n//       <div className=\"project-main-container\">\n//         {data.columnOrder.map(columnId => {\n//           const column = data.columns[columnId];\n//           const tasks = column.taskIds.map(taskId => data.tasks[taskId]);\n//           return <Column key={column.id} column={column} tasks={tasks} />;\n//         })}\n//       </div>\n//     </DragDropContext>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}