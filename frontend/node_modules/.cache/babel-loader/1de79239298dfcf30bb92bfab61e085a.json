{"ast":null,"code":"var _jsxFileName = \"/Users/edwardlee/code/react/project-management-tool/project-management-tool/frontend/src/components/Project/Project.js\";\nimport React from 'react';\nimport axios from 'axios';\nexport default function Project() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  });\n} // import React, { useEffect, useState } from \"react\";\n// import \"./Project.scss\";\n// import initData from \"./testData\";\n// import Column from \"../Column/Column\";\n// import { DragDropContext } from \"react-beautiful-dnd\";\n// export default function Project() {\n//   const [data, setData] = useState(initData);\n//   const onDragEnd = result => {\n//     const { destination, source, draggableId } = result;\n//     if (!destination) {\n//       return;\n//     }\n//     if (\n//       destination.droppableId === source.droppableId &&\n//       destination.index === source.index\n//     ) {\n//       return;\n//     }\n//     const column = data.columns[source.droppableId];\n//     const newTaskIds = Array.from(column.taskIds);\n//     newTaskIds .splice(source.index, 1);\n//     newTaskIds.splice(destination.index, 0 , draggableId);\n//     const newColumn = {\n//       ...column,\n//       taskIds:newTaskIds,\n//     }\n//     const newState ={\n//        ...data,\n//        column:{\n//          ...data.columns,\n//          [newColumn.id]:newColumn,\n//        }\n//     }\n//     setData(newState)\n//   };\n//   return (\n//     <DragDropContext onDragEnd={onDragEnd}>\n//       <div className=\"project-main-container\">\n//         {data.columnOrder.map(columnId => {\n//           const column = data.columns[columnId];\n//           const tasks = column.taskIds.map(taskId => data.tasks[taskId]);\n//           return <Column key={column.id} column={column} tasks={tasks} />;\n//         })}\n//       </div>\n//     </DragDropContext>\n//   );\n// }","map":{"version":3,"sources":["/Users/edwardlee/code/react/project-management-tool/project-management-tool/frontend/src/components/Project/Project.js"],"names":["React","axios","Project"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,eAAe,SAASC,OAAT,GAAmB;AAChC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD,C,CAID;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nexport default function Project() {\n  return (\n    <div>\n      \n    </div>\n  )\n}\n\n\n\n// import React, { useEffect, useState } from \"react\";\n// import \"./Project.scss\";\n// import initData from \"./testData\";\n// import Column from \"../Column/Column\";\n// import { DragDropContext } from \"react-beautiful-dnd\";\n\n// export default function Project() {\n//   const [data, setData] = useState(initData);\n\n//   const onDragEnd = result => {\n//     const { destination, source, draggableId } = result;\n//     if (!destination) {\n//       return;\n//     }\n\n//     if (\n//       destination.droppableId === source.droppableId &&\n//       destination.index === source.index\n//     ) {\n//       return;\n//     }\n\n//     const column = data.columns[source.droppableId];\n//     const newTaskIds = Array.from(column.taskIds);\n//     newTaskIds .splice(source.index, 1);\n//     newTaskIds.splice(destination.index, 0 , draggableId);\n\n//     const newColumn = {\n//       ...column,\n//       taskIds:newTaskIds,\n\n//     }\n\n//     const newState ={\n//        ...data,\n//        column:{\n//          ...data.columns,\n//          [newColumn.id]:newColumn,\n//        }\n//     }\n\n//     setData(newState)\n\n//   };\n//   return (\n//     <DragDropContext onDragEnd={onDragEnd}>\n//       <div className=\"project-main-container\">\n//         {data.columnOrder.map(columnId => {\n//           const column = data.columns[columnId];\n//           const tasks = column.taskIds.map(taskId => data.tasks[taskId]);\n//           return <Column key={column.id} column={column} tasks={tasks} />;\n//         })}\n//       </div>\n//     </DragDropContext>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}