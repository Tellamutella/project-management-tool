{"ast":null,"code":"import _slicedToArray from \"/Users/edwardlee/code/react/project-management-tool/project-management-tool/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/edwardlee/code/react/project-management-tool/project-management-tool/frontend/src/components/Project/Project.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Project.scss\";\nimport axios from \"axios\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport ProjectCard from \"../ProjectCard/ProjectCard\";\nexport default function Project() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        stageOne = _useState2[0],\n        setStageOne = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        stageTwo = _useState4[0],\n        setStageTwo = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        stageThree = _useState6[0],\n        setStageThree = _useState6[1];\n\n  const _useState7 = useState(true),\n        _useState8 = _slicedToArray(_useState7, 2),\n        loading = _useState8[0],\n        setLoading = _useState8[1];\n\n  useEffect(() => {\n    fetchData();\n    loader();\n  }, []);\n\n  const loader = () => setTimeout(() => {\n    setLoading(false);\n  }, 1000);\n\n  const fetchData = () => {\n    axios({\n      url: \"http://localhost:3000/api/projects\"\n    }).then(res => {\n      filterProjects(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }; //filter data retrieved from backend based on their stage\n\n\n  const filterProjects = data => {\n    const one = data.filter(element => element.stage === \"1\");\n    const two = data.filter(element => element.stage === \"2\");\n    const three = data.filter(element => element.stage === \"3\");\n    setStageOne(one);\n    setStageTwo(two);\n    setStageThree(three);\n  };\n\n  const onDragEndHandle = result => {\n    // setLoading(true);\n    const destination = result.destination,\n          source = result.source,\n          draggableId = result.draggableId; //Do nothing when no destination\n\n    if (!destination) {\n      loader();\n      return;\n    }\n\n    if ( // Check if destination is the same place and do nothing\n    destination.droppableId === source.droppableId && destination.index === source.index) {\n      loader();\n      return;\n    } else if ( // check same destination differnt order\n    destination.droppableId === source.droppableId && source.index !== destination.index) {\n      switch (source.droppableId) {\n        // moving tiles up and down, Needs to be worked on.\n        case \"stageOne\":\n          let newStageOne = [...stageOne];\n          let stealOne = newStageOne.splice(source.index, 1)[0];\n          newStageOne.splice(destination.index, 0, stealOne);\n          setStageOne(newStageOne);\n          break;\n\n        case \"stageTwo\":\n          let newStageTwo = [...stageTwo];\n          let stealTwo = newStageTwo.splice(source.index, 1)[0];\n          newStageTwo.splice(destination.index, 0, stealTwo);\n          setStageTwo(newStageTwo);\n          break;\n\n        case \"stageThree\":\n          let newStageThree = [...stageThree];\n          let stealThree = newStageThree.splice(source.index, 1)[0];\n          newStageThree.splice(destination.index, 0, stealThree);\n          setStageThree(newStageThree);\n          break;\n      }\n    } else if (destination.droppableId !== source.droppableId) {\n      // update MongoDb after tile moved to another stage\n      let endPoint = \"\";\n\n      switch (destination.droppableId) {\n        case \"stageOne\":\n          endPoint = \"1\";\n          break;\n\n        case \"stageTwo\":\n          endPoint = \"2\";\n          break;\n\n        case \"stageThree\":\n          endPoint = \"3\";\n          break;\n      }\n\n      axios({\n        method: \"POST\",\n        url: \"http://localhost:3000/api/project/\".concat(draggableId, \"/\").concat(endPoint)\n      }); // re-fetch data after stage change\n\n      fetchData();\n    } // loader();\n\n  };\n\n  return React.createElement(React.Fragment, null, loading ? React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"LOADING\") : React.createElement(DragDropContext, {\n    onDragEnd: onDragEndHandle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"stage-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(Droppable, {\n    droppableId: \"stageOne\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, provided => React.createElement(\"div\", Object.assign({\n    className: \"stageOne-container\"\n  }, provided.droppableProps, {\n    ref: provided.innerRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), stageOne.map((project, index) => React.createElement(ProjectCard, Object.assign({\n    key: project._id\n  }, project, {\n    index: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }))), provided.placeholder))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Droppable, {\n    droppableId: \"stageTwo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, provided => React.createElement(\"div\", Object.assign({\n    className: \"stageTwo-container\"\n  }, provided.droppableProps, {\n    ref: provided.innerRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), stageTwo.map((project, index) => React.createElement(ProjectCard, Object.assign({\n    key: project._id\n  }, project, {\n    index: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }))), provided.placeholder))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(Droppable, {\n    droppableId: \"stageThree\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, provided => React.createElement(\"div\", Object.assign({\n    className: \"stageThree-container\"\n  }, provided.droppableProps, {\n    ref: provided.innerRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }), stageThree.map((project, index) => React.createElement(ProjectCard, Object.assign({\n    key: project._id\n  }, project, {\n    index: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }))), provided.placeholder))))));\n}","map":{"version":3,"sources":["/Users/edwardlee/code/react/project-management-tool/project-management-tool/frontend/src/components/Project/Project.js"],"names":["React","useEffect","useState","axios","DragDropContext","Droppable","ProjectCard","Project","stageOne","setStageOne","stageTwo","setStageTwo","stageThree","setStageThree","loading","setLoading","fetchData","loader","setTimeout","url","then","res","filterProjects","data","catch","err","console","log","one","filter","element","stage","two","three","onDragEndHandle","result","destination","source","draggableId","droppableId","index","newStageOne","stealOne","splice","newStageTwo","stealTwo","newStageThree","stealThree","endPoint","method","provided","droppableProps","innerRef","map","project","_id","placeholder"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,gBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,SAA1B,QAA2C,qBAA3C;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA,oBACAL,QAAQ,CAAC,EAAD,CADR;AAAA;AAAA,QACzBM,QADyB;AAAA,QACfC,WADe;;AAAA,qBAEAP,QAAQ,CAAC,EAAD,CAFR;AAAA;AAAA,QAEzBQ,QAFyB;AAAA,QAEfC,WAFe;;AAAA,qBAGIT,QAAQ,CAAC,EAAD,CAHZ;AAAA;AAAA,QAGzBU,UAHyB;AAAA,QAGbC,aAHa;;AAAA,qBAIFX,QAAQ,CAAC,IAAD,CAJN;AAAA;AAAA,QAIzBY,OAJyB;AAAA,QAIhBC,UAJgB;;AAMhCd,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,SAAS;AACTC,IAAAA,MAAM;AACP,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMA,MAAM,GAAG,MACbC,UAAU,CAAC,MAAM;AACfH,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAFS,EAEP,IAFO,CADZ;;AAKA,QAAMC,SAAS,GAAG,MAAM;AACtBb,IAAAA,KAAK,CAAC;AACJgB,MAAAA,GAAG,EAAE;AADD,KAAD,CAAL,CAGGC,IAHH,CAGQC,GAAG,IAAI;AACXC,MAAAA,cAAc,CAACD,GAAG,CAACE,IAAL,CAAd;AACD,KALH,EAMGC,KANH,CAMSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KARH;AASD,GAVD,CAhBgC,CA2BhC;;;AACA,QAAMH,cAAc,GAAGC,IAAI,IAAI;AAC7B,UAAMK,GAAG,GAAGL,IAAI,CAACM,MAAL,CAAYC,OAAO,IAAIA,OAAO,CAACC,KAAR,KAAkB,GAAzC,CAAZ;AACA,UAAMC,GAAG,GAAGT,IAAI,CAACM,MAAL,CAAYC,OAAO,IAAIA,OAAO,CAACC,KAAR,KAAkB,GAAzC,CAAZ;AACA,UAAME,KAAK,GAAGV,IAAI,CAACM,MAAL,CAAYC,OAAO,IAAIA,OAAO,CAACC,KAAR,KAAkB,GAAzC,CAAd;AACAtB,IAAAA,WAAW,CAACmB,GAAD,CAAX;AACAjB,IAAAA,WAAW,CAACqB,GAAD,CAAX;AACAnB,IAAAA,aAAa,CAACoB,KAAD,CAAb;AACD,GAPD;;AASA,QAAMC,eAAe,GAAGC,MAAM,IAAI;AAChC;AADgC,UAExBC,WAFwB,GAEaD,MAFb,CAExBC,WAFwB;AAAA,UAEXC,MAFW,GAEaF,MAFb,CAEXE,MAFW;AAAA,UAEHC,WAFG,GAEaH,MAFb,CAEHG,WAFG,EAGhC;;AACA,QAAI,CAACF,WAAL,EAAkB;AAChBnB,MAAAA,MAAM;AACN;AACD;;AAED,SACE;AACAmB,IAAAA,WAAW,CAACG,WAAZ,KAA4BF,MAAM,CAACE,WAAnC,IACAH,WAAW,CAACI,KAAZ,KAAsBH,MAAM,CAACG,KAH/B,EAIE;AACAvB,MAAAA,MAAM;AACN;AACD,KAPD,MAOO,KACL;AACAmB,IAAAA,WAAW,CAACG,WAAZ,KAA4BF,MAAM,CAACE,WAAnC,IACAF,MAAM,CAACG,KAAP,KAAiBJ,WAAW,CAACI,KAHxB,EAIL;AACA,cAAQH,MAAM,CAACE,WAAf;AACE;AACA,aAAK,UAAL;AACE,cAAIE,WAAW,GAAG,CAAC,GAAGjC,QAAJ,CAAlB;AACA,cAAIkC,QAAQ,GAAGD,WAAW,CAACE,MAAZ,CAAmBN,MAAM,CAACG,KAA1B,EAAiC,CAAjC,EAAoC,CAApC,CAAf;AACAC,UAAAA,WAAW,CAACE,MAAZ,CAAmBP,WAAW,CAACI,KAA/B,EAAsC,CAAtC,EAAyCE,QAAzC;AACAjC,UAAAA,WAAW,CAACgC,WAAD,CAAX;AACA;;AACF,aAAK,UAAL;AACE,cAAIG,WAAW,GAAG,CAAC,GAAGlC,QAAJ,CAAlB;AACA,cAAImC,QAAQ,GAAGD,WAAW,CAACD,MAAZ,CAAmBN,MAAM,CAACG,KAA1B,EAAiC,CAAjC,EAAoC,CAApC,CAAf;AACAI,UAAAA,WAAW,CAACD,MAAZ,CAAmBP,WAAW,CAACI,KAA/B,EAAsC,CAAtC,EAAyCK,QAAzC;AACAlC,UAAAA,WAAW,CAACiC,WAAD,CAAX;AACA;;AACF,aAAK,YAAL;AACE,cAAIE,aAAa,GAAG,CAAC,GAAGlC,UAAJ,CAApB;AACA,cAAImC,UAAU,GAAGD,aAAa,CAACH,MAAd,CAAqBN,MAAM,CAACG,KAA5B,EAAmC,CAAnC,EAAsC,CAAtC,CAAjB;AACAM,UAAAA,aAAa,CAACH,MAAd,CAAqBP,WAAW,CAACI,KAAjC,EAAwC,CAAxC,EAA2CO,UAA3C;AACAlC,UAAAA,aAAa,CAACiC,aAAD,CAAb;AACA;AAnBJ;AAqBD,KA1BM,MA0BA,IAAIV,WAAW,CAACG,WAAZ,KAA4BF,MAAM,CAACE,WAAvC,EAAoD;AACzD;AACA,UAAIS,QAAQ,GAAG,EAAf;;AACA,cAAQZ,WAAW,CAACG,WAApB;AACE,aAAK,UAAL;AACES,UAAAA,QAAQ,GAAG,GAAX;AACA;;AACF,aAAK,UAAL;AACEA,UAAAA,QAAQ,GAAG,GAAX;AACA;;AACF,aAAK,YAAL;AACEA,UAAAA,QAAQ,GAAG,GAAX;AACA;AATJ;;AAWA7C,MAAAA,KAAK,CAAC;AACJ8C,QAAAA,MAAM,EAAE,MADJ;AAEJ9B,QAAAA,GAAG,8CAAuCmB,WAAvC,cAAsDU,QAAtD;AAFC,OAAD,CAAL,CAdyD,CAmBzD;;AACAhC,MAAAA,SAAS;AACV,KA/D+B,CAgEhC;;AACD,GAjED;;AAmEA,SACE,0CACGF,OAAO,GACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADM,GAGN,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAEoB,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGgB,QAAQ,IACP;AACE,IAAA,SAAS,EAAC;AADZ,KAEMA,QAAQ,CAACC,cAFf;AAGE,IAAA,GAAG,EAAED,QAAQ,CAACE,QAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKG5C,QAAQ,CAAC6C,GAAT,CAAa,CAACC,OAAD,EAAUd,KAAV,KACZ,oBAAC,WAAD;AACE,IAAA,GAAG,EAAEc,OAAO,CAACC;AADf,KAEMD,OAFN;AAGE,IAAA,KAAK,EAAEd,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,CALH,EAYGU,QAAQ,CAACM,WAZZ,CAFJ,CADF,CADF,EAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,QAAQ,IACP;AACE,IAAA,SAAS,EAAC;AADZ,KAEMA,QAAQ,CAACC,cAFf;AAGE,IAAA,GAAG,EAAED,QAAQ,CAACE,QAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKG1C,QAAQ,CAAC2C,GAAT,CAAa,CAACC,OAAD,EAAUd,KAAV,KACZ,oBAAC,WAAD;AACE,IAAA,GAAG,EAAEc,OAAO,CAACC;AADf,KAEMD,OAFN;AAGE,IAAA,KAAK,EAAEd,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,CALH,EAYGU,QAAQ,CAACM,WAZZ,CAFJ,CADF,CArBF,EAyCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,QAAQ,IACP;AACE,IAAA,SAAS,EAAC;AADZ,KAEMA,QAAQ,CAACC,cAFf;AAGE,IAAA,GAAG,EAAED,QAAQ,CAACE,QAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKGxC,UAAU,CAACyC,GAAX,CAAe,CAACC,OAAD,EAAUd,KAAV,KACd,oBAAC,WAAD;AACE,IAAA,GAAG,EAAEc,OAAO,CAACC;AADf,KAEMD,OAFN;AAGE,IAAA,KAAK,EAAEd,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,CALH,EAYGU,QAAQ,CAACM,WAZZ,CAFJ,CADF,CAzCF,CADF,CAJJ,CADF;AAwED","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Project.scss\";\nimport axios from \"axios\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport ProjectCard from \"../ProjectCard/ProjectCard\";\n\nexport default function Project() {\n  const [stageOne, setStageOne] = useState([]);\n  const [stageTwo, setStageTwo] = useState([]);\n  const [stageThree, setStageThree] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchData();\n    loader();\n  }, []);\n\n  const loader = () =>\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n\n  const fetchData = () => {\n    axios({\n      url: \"http://localhost:3000/api/projects\"\n    })\n      .then(res => {\n        filterProjects(res.data);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  //filter data retrieved from backend based on their stage\n  const filterProjects = data => {\n    const one = data.filter(element => element.stage === \"1\");\n    const two = data.filter(element => element.stage === \"2\");\n    const three = data.filter(element => element.stage === \"3\");\n    setStageOne(one);\n    setStageTwo(two);\n    setStageThree(three);\n  };\n\n  const onDragEndHandle = result => {\n    // setLoading(true);\n    const { destination, source, draggableId } = result;\n    //Do nothing when no destination\n    if (!destination) {\n      loader();\n      return;\n    }\n\n    if (\n      // Check if destination is the same place and do nothing\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      loader();\n      return;\n    } else if (\n      // check same destination differnt order\n      destination.droppableId === source.droppableId &&\n      source.index !== destination.index\n    ) {\n      switch (source.droppableId) {\n        // moving tiles up and down, Needs to be worked on.\n        case \"stageOne\":\n          let newStageOne = [...stageOne];\n          let stealOne = newStageOne.splice(source.index, 1)[0];\n          newStageOne.splice(destination.index, 0, stealOne);\n          setStageOne(newStageOne);\n          break;\n        case \"stageTwo\":\n          let newStageTwo = [...stageTwo];\n          let stealTwo = newStageTwo.splice(source.index, 1)[0];\n          newStageTwo.splice(destination.index, 0, stealTwo);\n          setStageTwo(newStageTwo);\n          break;\n        case \"stageThree\":\n          let newStageThree = [...stageThree];\n          let stealThree = newStageThree.splice(source.index, 1)[0];\n          newStageThree.splice(destination.index, 0, stealThree);\n          setStageThree(newStageThree);\n          break;\n      }\n    } else if (destination.droppableId !== source.droppableId) {\n      // update MongoDb after tile moved to another stage\n      let endPoint = \"\";\n      switch (destination.droppableId) {\n        case \"stageOne\":\n          endPoint = \"1\";\n          break;\n        case \"stageTwo\":\n          endPoint = \"2\";\n          break;\n        case \"stageThree\":\n          endPoint = \"3\";\n          break;\n      }\n      axios({\n        method: \"POST\",\n        url: `http://localhost:3000/api/project/${draggableId}/${endPoint}`\n      });\n\n      // re-fetch data after stage change\n      fetchData();\n    }\n    // loader();\n  };\n\n  return (\n    <>\n      {loading ? (\n        <h1>LOADING</h1>\n      ) : (\n        <DragDropContext onDragEnd={onDragEndHandle}>\n          <div className=\"stage-container\">\n            <div>\n              <Droppable droppableId=\"stageOne\">\n                {provided => (\n                  <div\n                    className=\"stageOne-container\"\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                  >\n                    {stageOne.map((project, index) => (\n                      <ProjectCard\n                        key={project._id}\n                        {...project}\n                        index={index}\n                      />\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </div>\n            <div>\n              <Droppable droppableId=\"stageTwo\">\n                {provided => (\n                  <div\n                    className=\"stageTwo-container\"\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                  >\n                    {stageTwo.map((project, index) => (\n                      <ProjectCard\n                        key={project._id}\n                        {...project}\n                        index={index}\n                      />\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </div>\n            <div>\n              <Droppable droppableId=\"stageThree\">\n                {provided => (\n                  <div\n                    className=\"stageThree-container\"\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                  >\n                    {stageThree.map((project, index) => (\n                      <ProjectCard\n                        key={project._id}\n                        {...project}\n                        index={index}\n                      />\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </div>\n          </div>\n        </DragDropContext>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}